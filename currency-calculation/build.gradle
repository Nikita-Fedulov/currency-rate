plugins {
    id 'java'
    id 'idea'
    id 'org.springframework.boot' version '2.5.8'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'com.google.protobuf' version '0.8.18'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

group = 'ru.mycompany'
version = '0.0.1-Calk'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'org.postgresql:postgresql'

    implementation 'net.devh:grpc-server-spring-boot-starter:2.12.0.RELEASE'
    implementation 'net.devh:grpc-client-spring-boot-starter:2.12.0.RELEASE'

    implementation 'io.grpc:grpc-netty-shaded:1.42.1'
    implementation 'io.grpc:grpc-protobuf:1.42.1'
    implementation 'io.grpc:grpc-stub:1.42.1'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // Ensure protobuf-java matches protoc version
    implementation 'com.google.protobuf:protobuf-java:3.19.1'
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.19.1'
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.42.1'
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {}
            }
            task.plugins {
                grpc {}
            }
        }
    }
}

idea {
    module {
        sourceDirs += file("${projectDir}/build/generated/source/proto/main/grpc")
        sourceDirs += file("${projectDir}/build/generated/source/proto/main/java")
        generatedSourceDirs += file("${projectDir}/build/generated/source/proto/main/grpc")
        generatedSourceDirs += file("${projectDir}/build/generated/source/proto/main/java")
    }
}

sourceSets {
    main {
        proto {
            srcDir 'src/main/proto'
        }
        java {
            srcDirs += 'build/generated/source/proto/main/grpc'
            srcDirs += 'build/generated/source/proto/main/java'
        }
    }
    test {
        proto {
            srcDir 'src/test/proto'
        }
    }
}

tasks.named('processResources') {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}
